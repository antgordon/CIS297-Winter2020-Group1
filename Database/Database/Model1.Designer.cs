<<<<<<< Updated upstream
﻿// T4 code generation is enabled for model 'C:\Users\Stabbeh\source\repos\CIS297\CIS297-Winter2020-Group1\Database\Database\Model1.edmx'. 
// To enable legacy code generation, change the value of the 'Code Generation Strategy' designer
// property to 'Legacy ObjectContext'. This property is available in the Properties Window when the model
// is open in the designer.

// If no context and entity classes have been generated, it may be because you created an empty model but
// have not yet chosen which version of Entity Framework to use. To generate a context class and entity
// classes for your model, open the model in the designer, right-click on the designer surface, and
// select 'Update Model from Database...', 'Generate Database from Model...', or 'Add Code Generation
// Item...'.
=======
﻿//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CollegeModel", "FK_Enrollment_Course_ID", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Database.Course), "Enrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Database.Enrollment), true)]
[assembly: EdmRelationshipAttribute("CollegeModel", "FK_Section_Course", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Database.Course), "Section", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Database.Section), true)]
[assembly: EdmRelationshipAttribute("CollegeModel", "FK_Major_ToDepartment", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Database.Department), "Major", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Database.Major), true)]
[assembly: EdmRelationshipAttribute("CollegeModel", "FK_Enrollment_Grade", "Grade", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Database.Grade), "Enrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Database.Enrollment), true)]
[assembly: EdmRelationshipAttribute("CollegeModel", "FK_Enrollment_Person_ID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Database.Person), "Enrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Database.Enrollment), true)]
[assembly: EdmRelationshipAttribute("CollegeModel", "FK_Enrollment_Section_ID", "Section", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Database.Section), "Enrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Database.Enrollment), true)]
[assembly: EdmRelationshipAttribute("CollegeModel", "FK_Enrollment_Semester", "Semester", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Database.Semester), "Enrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Database.Enrollment), true)]
[assembly: EdmRelationshipAttribute("CollegeModel", "FK_Section_Semester", "Semester", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Database.Semester), "Section", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Database.Section), true)]

#endregion

namespace Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CollegeEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CollegeEntities1 object using the connection string found in the 'CollegeEntities1' section of the application configuration file.
        /// </summary>
        public CollegeEntities1() : base("name=CollegeEntities1", "CollegeEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CollegeEntities1 object.
        /// </summary>
        public CollegeEntities1(string connectionString) : base(connectionString, "CollegeEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CollegeEntities1 object.
        /// </summary>
        public CollegeEntities1(EntityConnection connection) : base(connection, "CollegeEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Course> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Course>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Course> _Courses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Enrollment> Enrollments
        {
            get
            {
                if ((_Enrollments == null))
                {
                    _Enrollments = base.CreateObjectSet<Enrollment>("Enrollments");
                }
                return _Enrollments;
            }
        }
        private ObjectSet<Enrollment> _Enrollments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Faculty> Faculties
        {
            get
            {
                if ((_Faculties == null))
                {
                    _Faculties = base.CreateObjectSet<Faculty>("Faculties");
                }
                return _Faculties;
            }
        }
        private ObjectSet<Faculty> _Faculties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Grade> Grades
        {
            get
            {
                if ((_Grades == null))
                {
                    _Grades = base.CreateObjectSet<Grade>("Grades");
                }
                return _Grades;
            }
        }
        private ObjectSet<Grade> _Grades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Major> Majors
        {
            get
            {
                if ((_Majors == null))
                {
                    _Majors = base.CreateObjectSet<Major>("Majors");
                }
                return _Majors;
            }
        }
        private ObjectSet<Major> _Majors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Season> Seasons
        {
            get
            {
                if ((_Seasons == null))
                {
                    _Seasons = base.CreateObjectSet<Season>("Seasons");
                }
                return _Seasons;
            }
        }
        private ObjectSet<Season> _Seasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Section> Sections
        {
            get
            {
                if ((_Sections == null))
                {
                    _Sections = base.CreateObjectSet<Section>("Sections");
                }
                return _Sections;
            }
        }
        private ObjectSet<Section> _Sections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Semester> Semesters
        {
            get
            {
                if ((_Semesters == null))
                {
                    _Semesters = base.CreateObjectSet<Semester>("Semesters");
                }
                return _Semesters;
            }
        }
        private ObjectSet<Semester> _Semesters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Courses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourses(Course course)
        {
            base.AddObject("Courses", course);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Enrollments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnrollments(Enrollment enrollment)
        {
            base.AddObject("Enrollments", enrollment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Faculties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFaculties(Faculty faculty)
        {
            base.AddObject("Faculties", faculty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Grades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrades(Grade grade)
        {
            base.AddObject("Grades", grade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Majors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMajors(Major major)
        {
            base.AddObject("Majors", major);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Seasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeasons(Season season)
        {
            base.AddObject("Seasons", season);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSections(Section section)
        {
            base.AddObject("Sections", section);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Semesters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSemesters(Semester semester)
        {
            base.AddObject("Semesters", semester);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Course : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Course object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        /// <param name="major">Initial value of the Major property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Course CreateCourse(global::System.Int32 id, global::System.Int32 department, global::System.Int32 major, global::System.Int32 number, global::System.String name)
        {
            Course course = new Course();
            course.Id = id;
            course.Department = department;
            course.Major = major;
            course.Number = number;
            course.Name = name;
            return course;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, "Department");
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.Int32 _Department;
        partial void OnDepartmentChanging(global::System.Int32 value);
        partial void OnDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Major
        {
            get
            {
                return _Major;
            }
            set
            {
                OnMajorChanging(value);
                ReportPropertyChanging("Major");
                _Major = StructuralObject.SetValidValue(value, "Major");
                ReportPropertyChanged("Major");
                OnMajorChanged();
            }
        }
        private global::System.Int32 _Major;
        partial void OnMajorChanging(global::System.Int32 value);
        partial void OnMajorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Course_ID", "Enrollment")]
        public EntityCollection<Enrollment> Enrollments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Course_ID", "Enrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Course_ID", "Enrollment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Section_Course", "Section")]
        public EntityCollection<Section> Sections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Section>("CollegeModel.FK_Section_Course", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Section>("CollegeModel.FK_Section_Course", "Section", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.String name)
        {
            Department department = new Department();
            department.Id = id;
            department.Name = name;
            return department;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Major_ToDepartment", "Major")]
        public EntityCollection<Major> Majors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Major>("CollegeModel.FK_Major_ToDepartment", "Major");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Major>("CollegeModel.FK_Major_ToDepartment", "Major", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Enrollment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Enrollment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Enrollment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="person_ID">Initial value of the Person_ID property.</param>
        /// <param name="semester">Initial value of the Semester property.</param>
        /// <param name="course_ID">Initial value of the Course_ID property.</param>
        /// <param name="section_ID">Initial value of the Section_ID property.</param>
        public static Enrollment CreateEnrollment(global::System.Int32 id, global::System.Int32 person_ID, global::System.Int32 semester, global::System.Int32 course_ID, global::System.Int32 section_ID)
        {
            Enrollment enrollment = new Enrollment();
            enrollment.Id = id;
            enrollment.Person_ID = person_ID;
            enrollment.Semester = semester;
            enrollment.Course_ID = course_ID;
            enrollment.Section_ID = section_ID;
            return enrollment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Person_ID
        {
            get
            {
                return _Person_ID;
            }
            set
            {
                OnPerson_IDChanging(value);
                ReportPropertyChanging("Person_ID");
                _Person_ID = StructuralObject.SetValidValue(value, "Person_ID");
                ReportPropertyChanged("Person_ID");
                OnPerson_IDChanged();
            }
        }
        private global::System.Int32 _Person_ID;
        partial void OnPerson_IDChanging(global::System.Int32 value);
        partial void OnPerson_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Semester
        {
            get
            {
                return _Semester;
            }
            set
            {
                OnSemesterChanging(value);
                ReportPropertyChanging("Semester");
                _Semester = StructuralObject.SetValidValue(value, "Semester");
                ReportPropertyChanged("Semester");
                OnSemesterChanged();
            }
        }
        private global::System.Int32 _Semester;
        partial void OnSemesterChanging(global::System.Int32 value);
        partial void OnSemesterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Course_ID
        {
            get
            {
                return _Course_ID;
            }
            set
            {
                OnCourse_IDChanging(value);
                ReportPropertyChanging("Course_ID");
                _Course_ID = StructuralObject.SetValidValue(value, "Course_ID");
                ReportPropertyChanged("Course_ID");
                OnCourse_IDChanged();
            }
        }
        private global::System.Int32 _Course_ID;
        partial void OnCourse_IDChanging(global::System.Int32 value);
        partial void OnCourse_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Section_ID
        {
            get
            {
                return _Section_ID;
            }
            set
            {
                OnSection_IDChanging(value);
                ReportPropertyChanging("Section_ID");
                _Section_ID = StructuralObject.SetValidValue(value, "Section_ID");
                ReportPropertyChanged("Section_ID");
                OnSection_IDChanged();
            }
        }
        private global::System.Int32 _Section_ID;
        partial void OnSection_IDChanging(global::System.Int32 value);
        partial void OnSection_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FinalGrade_ID
        {
            get
            {
                return _FinalGrade_ID;
            }
            set
            {
                OnFinalGrade_IDChanging(value);
                ReportPropertyChanging("FinalGrade_ID");
                _FinalGrade_ID = StructuralObject.SetValidValue(value, "FinalGrade_ID");
                ReportPropertyChanged("FinalGrade_ID");
                OnFinalGrade_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FinalGrade_ID;
        partial void OnFinalGrade_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFinalGrade_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Course_ID", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("CollegeModel.FK_Enrollment_Course_ID", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("CollegeModel.FK_Enrollment_Course_ID", "Course").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("CollegeModel.FK_Enrollment_Course_ID", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("CollegeModel.FK_Enrollment_Course_ID", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Grade", "Grade")]
        public Grade Grade
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Grade>("CollegeModel.FK_Enrollment_Grade", "Grade").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Grade>("CollegeModel.FK_Enrollment_Grade", "Grade").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Grade> GradeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Grade>("CollegeModel.FK_Enrollment_Grade", "Grade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Grade>("CollegeModel.FK_Enrollment_Grade", "Grade", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Person_ID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CollegeModel.FK_Enrollment_Person_ID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CollegeModel.FK_Enrollment_Person_ID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CollegeModel.FK_Enrollment_Person_ID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("CollegeModel.FK_Enrollment_Person_ID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Section_ID", "Section")]
        public Section Section
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("CollegeModel.FK_Enrollment_Section_ID", "Section").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("CollegeModel.FK_Enrollment_Section_ID", "Section").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Section> SectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("CollegeModel.FK_Enrollment_Section_ID", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Section>("CollegeModel.FK_Enrollment_Section_ID", "Section", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Semester", "Semester")]
        public Semester Semester1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("CollegeModel.FK_Enrollment_Semester", "Semester").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("CollegeModel.FK_Enrollment_Semester", "Semester").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Semester> Semester1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("CollegeModel.FK_Enrollment_Semester", "Semester");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Semester>("CollegeModel.FK_Enrollment_Semester", "Semester", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Faculty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Faculty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Faculty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="person_Id">Initial value of the Person_Id property.</param>
        public static Faculty CreateFaculty(global::System.Int32 id, global::System.Int32 person_Id)
        {
            Faculty faculty = new Faculty();
            faculty.Id = id;
            faculty.Person_Id = person_Id;
            return faculty;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Person_Id
        {
            get
            {
                return _Person_Id;
            }
            set
            {
                OnPerson_IdChanging(value);
                ReportPropertyChanging("Person_Id");
                _Person_Id = StructuralObject.SetValidValue(value, "Person_Id");
                ReportPropertyChanged("Person_Id");
                OnPerson_IdChanged();
            }
        }
        private global::System.Int32 _Person_Id;
        partial void OnPerson_IdChanging(global::System.Int32 value);
        partial void OnPerson_IdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Grade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Grade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Grade object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="letter">Initial value of the Letter property.</param>
        public static Grade CreateGrade(global::System.Int32 id, global::System.String letter)
        {
            Grade grade = new Grade();
            grade.Id = id;
            grade.Letter = letter;
            return grade;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Letter
        {
            get
            {
                return _Letter;
            }
            set
            {
                OnLetterChanging(value);
                ReportPropertyChanging("Letter");
                _Letter = StructuralObject.SetValidValue(value, false, "Letter");
                ReportPropertyChanged("Letter");
                OnLetterChanged();
            }
        }
        private global::System.String _Letter;
        partial void OnLetterChanging(global::System.String value);
        partial void OnLetterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Grade", "Enrollment")]
        public EntityCollection<Enrollment> Enrollments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Grade", "Enrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Grade", "Enrollment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Major")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Major : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Major object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Major CreateMajor(global::System.Int32 id)
        {
            Major major = new Major();
            major.Id = id;
            return major;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Department_Id
        {
            get
            {
                return _Department_Id;
            }
            set
            {
                OnDepartment_IdChanging(value);
                ReportPropertyChanging("Department_Id");
                _Department_Id = StructuralObject.SetValidValue(value, "Department_Id");
                ReportPropertyChanged("Department_Id");
                OnDepartment_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Department_Id;
        partial void OnDepartment_IdChanging(Nullable<global::System.Int32> value);
        partial void OnDepartment_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Major_ToDepartment", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("CollegeModel.FK_Major_ToDepartment", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("CollegeModel.FK_Major_ToDepartment", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("CollegeModel.FK_Major_ToDepartment", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("CollegeModel.FK_Major_ToDepartment", "Department", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static Person CreatePerson(global::System.Int32 id, global::System.String name, global::System.String email, global::System.String number)
        {
            Person person = new Person();
            person.Id = id;
            person.Name = name;
            person.Email = email;
            person.Number = number;
            return person;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Person_ID", "Enrollment")]
        public EntityCollection<Enrollment> Enrollments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Person_ID", "Enrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Person_ID", "Enrollment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Season")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Season : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Season object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Season CreateSeason(global::System.Int32 id, global::System.String name)
        {
            Season season = new Season();
            season.Id = id;
            season.Name = name;
            return season;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Section")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Section : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Section object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="faculty_ID">Initial value of the Faculty_ID property.</param>
        /// <param name="course_ID">Initial value of the Course_ID property.</param>
        /// <param name="semester_ID">Initial value of the Semester_ID property.</param>
        public static Section CreateSection(global::System.Int32 id, global::System.Int32 faculty_ID, global::System.Int32 course_ID, global::System.Int32 semester_ID)
        {
            Section section = new Section();
            section.Id = id;
            section.Faculty_ID = faculty_ID;
            section.Course_ID = course_ID;
            section.Semester_ID = semester_ID;
            return section;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Faculty_ID
        {
            get
            {
                return _Faculty_ID;
            }
            set
            {
                OnFaculty_IDChanging(value);
                ReportPropertyChanging("Faculty_ID");
                _Faculty_ID = StructuralObject.SetValidValue(value, "Faculty_ID");
                ReportPropertyChanged("Faculty_ID");
                OnFaculty_IDChanged();
            }
        }
        private global::System.Int32 _Faculty_ID;
        partial void OnFaculty_IDChanging(global::System.Int32 value);
        partial void OnFaculty_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Course_ID
        {
            get
            {
                return _Course_ID;
            }
            set
            {
                OnCourse_IDChanging(value);
                ReportPropertyChanging("Course_ID");
                _Course_ID = StructuralObject.SetValidValue(value, "Course_ID");
                ReportPropertyChanged("Course_ID");
                OnCourse_IDChanged();
            }
        }
        private global::System.Int32 _Course_ID;
        partial void OnCourse_IDChanging(global::System.Int32 value);
        partial void OnCourse_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Semester_ID
        {
            get
            {
                return _Semester_ID;
            }
            set
            {
                OnSemester_IDChanging(value);
                ReportPropertyChanging("Semester_ID");
                _Semester_ID = StructuralObject.SetValidValue(value, "Semester_ID");
                ReportPropertyChanged("Semester_ID");
                OnSemester_IDChanged();
            }
        }
        private global::System.Int32 _Semester_ID;
        partial void OnSemester_IDChanging(global::System.Int32 value);
        partial void OnSemester_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Section_Course", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("CollegeModel.FK_Section_Course", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("CollegeModel.FK_Section_Course", "Course").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("CollegeModel.FK_Section_Course", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("CollegeModel.FK_Section_Course", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Section_ID", "Enrollment")]
        public EntityCollection<Enrollment> Enrollments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Section_ID", "Enrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Section_ID", "Enrollment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Section_Semester", "Semester")]
        public Semester Semester
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("CollegeModel.FK_Section_Semester", "Semester").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("CollegeModel.FK_Section_Semester", "Semester").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Semester> SemesterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("CollegeModel.FK_Section_Semester", "Semester");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Semester>("CollegeModel.FK_Section_Semester", "Semester", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Semester")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Semester : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Semester object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="season">Initial value of the Season property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static Semester CreateSemester(global::System.Int32 id, global::System.Int32 season, global::System.Int32 year)
        {
            Semester semester = new Semester();
            semester.Id = id;
            semester.Season = season;
            semester.Year = year;
            return semester;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Season
        {
            get
            {
                return _Season;
            }
            set
            {
                OnSeasonChanging(value);
                ReportPropertyChanging("Season");
                _Season = StructuralObject.SetValidValue(value, "Season");
                ReportPropertyChanged("Season");
                OnSeasonChanged();
            }
        }
        private global::System.Int32 _Season;
        partial void OnSeasonChanging(global::System.Int32 value);
        partial void OnSeasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, "Year");
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Enrollment_Semester", "Enrollment")]
        public EntityCollection<Enrollment> Enrollments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Semester", "Enrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enrollment>("CollegeModel.FK_Enrollment_Semester", "Enrollment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CollegeModel", "FK_Section_Semester", "Section")]
        public EntityCollection<Section> Sections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Section>("CollegeModel.FK_Section_Semester", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Section>("CollegeModel.FK_Section_Semester", "Section", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollegeModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="person_Id">Initial value of the Person_Id property.</param>
        public static Student CreateStudent(global::System.Int32 id, global::System.Int32 person_Id)
        {
            Student student = new Student();
            student.Id = id;
            student.Person_Id = person_Id;
            return student;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Person_Id
        {
            get
            {
                return _Person_Id;
            }
            set
            {
                OnPerson_IdChanging(value);
                ReportPropertyChanging("Person_Id");
                _Person_Id = StructuralObject.SetValidValue(value, "Person_Id");
                ReportPropertyChanged("Person_Id");
                OnPerson_IdChanged();
            }
        }
        private global::System.Int32 _Person_Id;
        partial void OnPerson_IdChanging(global::System.Int32 value);
        partial void OnPerson_IdChanged();

        #endregion

    }

    #endregion

}
>>>>>>> Stashed changes
